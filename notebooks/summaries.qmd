---
title: "Manuscript Numbers"
format: html
editor: visual
execute: 
  echo: false
---

Numbers included in text of manuscript.

```{r setup}
#| include: false
library(sf)
library(tidyverse)
library(gt)
library(glue)
library(khroma)
library(tigris)
library(patchwork)
library(targets)
library(arrow)
source("../code/helpers.R")
options(scipen = 999)
tar_load_everything(store = '../_targets') 
out <- read_sf(file.path('../', output_file))
```

### Intermediate data 
```{r}
steps <- tribble(
	~ Step, ~ Count, ~denom, ~ major,
	"ICS-209 Minimal Harmonization", nrow(event_ics209), NA, T,
		"County Provided", sum(!is.na(event_ics209$wildfire_counties)), nrow(event_ics209), F,
		"Lat/Long Provided", sum(!is.na(event_ics209$wildfire_poo_lat)), nrow(event_ics209), F,
	"Redbooks", nrow(event_redbook), NA, T,
		"County Provided", sum(!is.na(event_redbook$wildfire_counties)), nrow(event_redbook), F,
		"Lat/Long Provided", NA, NA, F,
	"FEMA/FMAG", nrow(event_fema), NA, T,
		"County Provided", sum(!is.na(event_fema$wildfire_counties)), nrow(event_fema), F,		
		"Lat/Long Provided", NA, NA, F,
	"Preliminary WFBZ (Criteria Only)", nrow(event), NA, T,
	"Spatial WFBZ", nrow(spatial), NA, T
) %>% 
	bind_rows(
		spatial %>% 
			st_drop_geometry() %>% 
			mutate(denom = n()) %>% 
			group_by(Step = geometry_method, denom) %>%
			summarize(Count = n(), .groups = 'drop') %>%
			mutate(major = F) %>%
			arrange(desc(Count))
	) %>%	
	bind_rows(
		 tribble(
				~ Step, ~ Count, ~denom, ~ major,
				"Community Intersect", sum(out$wildfire_community_intersect, na.rm = TRUE), nrow(out), T
		 )
	) %>% mutate(Percent = if_else(!is.na(denom), Count/denom, NA))

steps %>%
	gt() %>% 
		fmt_percent(Percent) %>%
		fmt_number(Count, decimals = 0) %>% 
		sub_missing() %>%
	  tab_style(
    	style = cell_text(weight = "bold"),
    	locations = cells_body(
      	columns = everything(), # Apply to the 'value' column
      	rows = major
    	)
  	) %>%
		cols_hide(c(major, denom))
	
```

## Final Data Descriptions

```{r}
dat <- tribble(
	~ Step, ~ Count, ~denom, ~ major,
	"All Disasters", nrow(out), NA, T,
		"Structures Destroyed", sum(str_detect(out$wildfire_disaster_criteria_met, 'structures_destroyed')), nrow(out), F,
		"Civilian Fatalities", sum(str_detect(out$wildfire_disaster_criteria_met, 'civilian_death')), nrow(out), F,
		"FMAG", sum(str_detect(out$wildfire_disaster_criteria_met, 'fema_fmag_declaration')), nrow(out), F
) %>% mutate(Percent = if_else(!is.na(denom), Count/denom, NA))


dat %>%
	gt() %>% 
		fmt_percent(Percent) %>%
		fmt_number(Count, decimals = 0) %>% 
		sub_missing() %>%
	  tab_style(
    	style = cell_text(weight = "bold"),
    	locations = cells_body(
      	columns = everything(), # Apply to the 'value' column
      	rows = major
    	)
  	) %>%
		cols_hide(c(major, denom))
```

### Year Trends

#### Min max
```{r}
out %>% 
	st_drop_geometry() %>% 
	group_by(wildfire_year) %>%
	summarize(n = n()) %>%
	filter(n == min(n) | n == max(n))
```

#### pre/post 2010
```{r}
out %>% 
	st_drop_geometry() %>%
	filter(between(wildfire_year, 2000, 2019)) %>% 
	group_by(pre2010 = wildfire_year < 2010) %>%
	summarize(
		n = n(),
		struct = sum(str_detect(wildfire_disaster_criteria_met, 'structures_destroyed')),
		fmag = sum(str_detect(wildfire_disaster_criteria_met, 'fema_fmag_declaration')),
		fatal = sum(str_detect(wildfire_disaster_criteria_met, 'civilian_death'))
	) 
```

### State with most fires

```{r}
out %>% 
	st_drop_geometry() %>%
	filter(between(wildfire_year, 2000, 2024)) %>% 
	group_by(wildfire_states, wildfire_year) %>%
	summarize(
		n = n()
	) %>%
	group_by(wildfire_year) %>%
	filter(n == max(n)) %>%
	arrange(wildfire_states, wildfire_year)
```


These six states had...



```{r}

out %>% 
	st_drop_geometry() %>%
	#filter(between(wildfire_year, 2000, 2024)) %>% 
	mutate(major_states = str_detect(wildfire_states, '(CA|FL|MS|OK|SC|TX)')) %>%
	group_by(major_states) %>%
	summarize(
		n = n()
	) 
```


Totals:

```{r}
out %>% 
	st_drop_geometry() %>%
	summarize(
		sum(wildfire_max_civil_fatalities, na.rm = TRUE),
		sum(wildfire_struct_destroyed, na.rm = TRUE),
		sum(wildfire_fema_dec, na.rm = TRUE)
	)
```

Cali only totals:

```{r}
out %>% 
	st_drop_geometry() %>%
	filter('CA' == wildfire_states) %>% 
	summarize(
		sum(wildfire_max_civil_fatalities, na.rm = TRUE),
		sum(wildfire_struct_destroyed, na.rm = TRUE),
		sum(wildfire_fema_dec, na.rm = TRUE)
	)
```



among fires that killed someone, x% killed lte 2. 
```{r}
out %>% st_drop_geometry() %>%
	filter(str_detect('civilian_death', wildfire_disaster_criteria_met)) %>%
	group_by(lte2 = wildfire_max_civil_fatalities <= 2) %>%
	summarize(n())
```



among fires that destroyed structures, x% killed lte 4. 
```{r}
out %>% st_drop_geometry() %>%
	filter(str_detect('civilian_death', wildfire_disaster_criteria_met)) %>%
	group_by(lte2 = wildfire_max_civil_fatalities <= 4) %>%
	summarize(n())
```
